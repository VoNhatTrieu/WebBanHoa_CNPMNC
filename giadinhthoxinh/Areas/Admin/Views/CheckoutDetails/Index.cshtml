@model IEnumerable<giadinhthoxinh.Models.tblCheckoutDetail>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
    </ul>
}

<style>
    /* Badge trạng thái */
    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 13px;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-confirmed {
        background-color: #d4edda;
        color: #155724;
    }

    /* Toast notification */
    .toast-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        min-width: 300px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        padding: 16px 20px;
        z-index: 9999;
        transform: translateX(400px);
        transition: transform 0.3s ease;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .toast-notification.show {
        transform: translateX(0);
    }

    .toast-notification.success {
        border-left: 4px solid #28a745;
    }

    .toast-notification.error {
        border-left: 4px solid #dc3545;
    }

    .toast-notification .toast-icon {
        font-size: 24px;
    }

    .toast-notification.success .toast-icon {
        color: #28a745;
    }

    .toast-notification.error .toast-icon {
        color: #dc3545;
    }
</style>

<!-- SweetAlert2 đã được xóa vì không còn cần thiết -->

<section class="content-header p-2">
</section>

<section class="content ml-2 mr-2">
    <div class="card">
        <div class="card-header">
            <h1 class="card-title text-lg text-danger">Danh sách chi tiết hóa đơn bán</h1>

            <div class="card-tools">
                @Html.ActionLink("thêm mới", "Create", null, new { @class = "btn btn-primary" })
            </div>
        </div>

        <div class="card-body table-responsive text-nowrap">
            <table class="table table-hover table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.iQuantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.fPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.tblOrder.sCustomerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.tblProduct.sProductName)
                        </th>
                        <th>Trạng thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var status = string.IsNullOrEmpty(item.sStatus) ? "Chờ xác nhận" : item.sStatus.Trim();
                        // Kiểm tra trạng thái đã xác nhận (CHỈ kiểm tra có chữ "Đã")
                        var isConfirmed = status.Contains("Đã");
                        var statusClass = isConfirmed ? "status-confirmed" : "status-pending";
                        var statusIcon = isConfirmed ? "fa-check-circle" : "fa-clock";
                        var displayStatus = isConfirmed ? "Đã xác nhận" : "Chờ xác nhận";

                        <script>
                            console.log("Row @item.PK_iCheckoutDetailID: Status=[@status], IsConfirmed=[@isConfirmed], Button=[@(!isConfirmed ? "SHOW" : "HIDE")]");
                        </script>

                        <tr id="row-@item.PK_iCheckoutDetailID">
                            <td>
                                @Html.DisplayFor(modelItem => item.iQuantity)
                            </td>
                            <td>
                                @string.Format("{0:#,0}", item.fPrice) vnđ
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.tblOrder.sCustomerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.tblProduct.sProductName)
                            </td>
                            <td>
                                <span class="status-badge @statusClass" id="status-@item.PK_iCheckoutDetailID">
                                    <i class="fas @statusIcon"></i> @displayStatus
                                </span>
                            </td>
                            <td>
                                <!-- Chức năng xác nhận sản phẩm thủ công đã bị xóa -->
                                <!-- Hệ thống tự động xác nhận sản phẩm khi khách hàng đặt hàng thành công -->

                                @Html.ActionLink("sửa", "Edit", new { id = item.PK_iCheckoutDetailID }, new { @class = "btn btn-primary btn-warning" })
                                @Html.ActionLink("chi tiết", "Details", new { id = item.PK_iCheckoutDetailID }, new { @class = "btn btn-primary btn-info" })
                                @Html.ActionLink("xóa", "Delete", new { id = item.PK_iCheckoutDetailID }, new { @class = "btn btn-primary btn-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">

        </div>
    </div>
</section>

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Kiểm tra jQuery đã load chưa
    if (typeof jQuery === 'undefined') {
        console.error('jQuery chưa được load!');
        document.write('<script src="https://code.jquery.com/jquery-3.6.0.min.js"><\/script>');
    } else {
        console.log('jQuery version:', jQuery.fn.jquery);
    }
    
    // Kiểm tra SweetAlert2 đã load chưa
    if (typeof Swal === 'undefined') {
        console.error('SweetAlert2 chưa được load!');
    } else {
        console.log('SweetAlert2 đã sẵn sàng');
    }

    // Hàm hiển thị toast notification
    function showToast(type, title, message) {
        const toast = document.createElement('div');
        toast.className = `toast-notification ${type}`;
        toast.innerHTML = `
            <div class="toast-icon">
                <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
            </div>
            <div class="toast-content">
                <div style="font-weight: 600; margin-bottom: 4px;">${title}</div>
                <div style="font-size: 14px; color: #666;">${message}</div>
            </div>
        `;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.add('show');
        }, 100);
        
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 300);
        }, 5000);
    }

    // Chức năng xác nhận sản phẩm thủ công đã bị xóa
    // Hệ thống tự động xác nhận sản phẩm khi khách hàng đặt hàng thành công
</script>