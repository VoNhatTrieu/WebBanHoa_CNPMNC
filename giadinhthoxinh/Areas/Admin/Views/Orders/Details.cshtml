@model giadinhthoxinh.Models.tblOrder

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fa fa-bars"></i></a>
        </li>
    </ul>
}

<style>
    /* Status badge styling */
    .badge-status {
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 14px;
    }

    .badge-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .badge-confirmed {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .badge-shipping {
        background-color: #cce5ff;
        color: #004085;
    }

    .badge-completed {
        background-color: #d4edda;
        color: #155724;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 20px;
        flex-wrap: wrap;
    }
</style>

<!-- SweetAlert2 CSS đã được xóa vì không còn cần thiết -->

<section class="content-header p-2">
</section>

<section class="content ml-2 mr-2">
    <div class="card">
        <div class="card-header">
            <h3 class="text-danger text-lg ">Chi tiết thông tin mã hóa đơn bán: <span class="text-primary text-lg">@Model.PK_iOrderID</span></h3>
        </div>

        <div class="card-body">
            <div>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.sCustomerName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.sCustomerName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.sCustomerPhone)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.sCustomerPhone)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.sDeliveryAddress)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.sDeliveryAddress)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.dInvoidDate)
                    </dt>

                    <dd id="invoiceDate">
                        @Html.DisplayFor(model => model.dInvoidDate)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.sBiller)
                    </dt>

                    <dd id="billerName">
                        @Html.DisplayFor(model => model.sBiller)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.iDeliveryMethod)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.iDeliveryMethod)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.fSurcharge)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.fSurcharge)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.iPaid)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.iPaid)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.sState)
                    </dt>

                    <dd id="orderState">
                        @{
                            var statusClass = "badge-pending";
                            var status = Model.sState ?? "Chờ xác nhận";
                            
                            if (status.Contains("xác nhận") || status.Contains("Chờ"))
                            {
                                statusClass = "badge-pending";
                            }
                            else if (status.Contains("Đã xác nhận"))
                            {
                                statusClass = "badge-confirmed";
                            }
                            else if (status.Contains("Đang giao"))
                            {
                                statusClass = "badge-shipping";
                            }
                            else if (status.Contains("Hoàn thành"))
                            {
                                statusClass = "badge-completed";
                            }
                        }
                        <span class="badge-status @statusClass">@status</span>
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.tblUser.sEmail)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.tblUser.sEmail)
                    </dd>

                </dl>
            </div>

            <div class="action-buttons">
                <!-- Chức năng xác nhận đơn hàng thủ công đã bị xóa -->
                <!-- Hệ thống tự động xác nhận đơn hàng khi khách hàng đặt hàng thành công -->

                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary" })
                @Html.ActionLink("Sửa", "Edit", new { id = Model.PK_iOrderID }, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
</section>